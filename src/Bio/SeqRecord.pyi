"""
This type stub file was generated by pyright.
"""

from typing import Any

class _RestrictedDict(dict):
    def __init__(self, length) -> None: ...
    def __setitem__(self, key, value) -> None: ...
    def update(self, new_dict) -> None: ...

class SeqRecord:
    id: Any
    name: Any
    description: Any
    dbxrefs: Any
    annotations: Any
    letter_annotations: Any
    features: Any
    def __init__(
        self,
        seq,
        id: str = ...,
        name: str = ...,
        description: str = ...,
        dbxrefs: Any | None = ...,
        features: Any | None = ...,
        annotations: Any | None = ...,
        letter_annotations: Any | None = ...,
    ) -> None: ...

    seq: Any
    def __getitem__(self, index): ...
    def __iter__(self): ...
    def __contains__(self, char): ...
    def format(self, format): ...
    def __format__(self, format_spec): ...
    def __len__(self): ...
    def __lt__(self, other) -> bool: ...
    def __le___(self, other) -> None: ...
    def __eq__(self, other) -> bool: ...
    def __ne__(self, other) -> bool: ...
    def __gt__(self, other) -> bool: ...
    def __ge__(self, other) -> bool: ...
    def __bool__(self): ...
    def __add__(self, other): ...
    def __radd__(self, other): ...
    def upper(self): ...
    def lower(self): ...
    def reverse_complement(
        self,
        id: bool = ...,
        name: bool = ...,
        description: bool = ...,
        features: bool = ...,
        annotations: bool = ...,
        letter_annotations: bool = ...,
        dbxrefs: bool = ...,
    ): ...
    def translate(
        self,
        table: str = ...,
        stop_symbol: str = ...,
        to_stop: bool = ...,
        cds: bool = ...,
        gap: Any | None = ...,
        id: bool = ...,
        name: bool = ...,
        description: bool = ...,
        features: bool = ...,
        annotations: bool = ...,
        letter_annotations: bool = ...,
        dbxrefs: bool = ...,
    ): ...
