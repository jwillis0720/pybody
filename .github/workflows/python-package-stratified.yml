# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions
name: Python Package Stratified
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.8]
    steps: 
      - name: Install HMMER
        run: |
            wget http://eddylab.org/software/hmmer/hmmer-3.3.1.tar.gz 
            tar -xzf hmmer-3.3.1.tar.gz
            cd hmmer-3.3.1
            ./configure
            make -j 2
            sudo make install
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
            python-version: ${{ matrix.python-version }}
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Install IgBlast Mac
        if: ${{runner.os == 'macOS'}}
        run: |
            curl -sS -o igblast.tar.gz  ftp://ftp.ncbi.nih.gov/blast/executables/igblast/release/1.16.0/ncbi-igblast-1.16.0-x64-macosx.tar.gz
      - name: Install IgBlast Linux
        if: ${{runner.os == 'Linux'}}
        run: |
          sudo apt-get install libuv1-dev  -y
          curl -sS -o igblast.tar.gz  ftp://ftp.ncbi.nih.gov/blast/executables/igblast/release/1.16.0/ncbi-igblast-1.16.0-x64-linux.tar.gz
      - name: Install w/dependencies
        run: |
          tar -xvf igblast.tar.gz
          sudo cp ncbi-igblast*/bin/* /usr/local/bin
          python -m pip install --upgrade pip
          pip install pytest
          pip install pytest-cov
          pip install .
      - name: Test
        run: |
          pytest --cov=pybody --cov-report=xml --cov=pybody --cov-report=xml tests/antibody   
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage.xml
          files: ./coverage1.xml,./coverage2.xml
          directory: ./coverage/reports/
          flags: unittests
          env_vars: OS,PYTHON
          name: codecov-umbrella
          fail_ci_if_error: true
          path_to_write_report: ./coverage/codecov_report.gz
          verbose: true